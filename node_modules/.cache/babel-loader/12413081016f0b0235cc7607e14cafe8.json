{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FACU PAPA\\\\Desktop\\\\my-app-master\\\\src\\\\components\\\\CategoryListContainer\\\\CategoryListContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './CategoryListContainer.css';\nimport CategoryList from '../CategoryList/CategoryList'; // base de datos\n// import database from '../../DATA/data.json'\n\nimport { getFirestore } from '../../FIREBASE/Firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CategoryListContainer() {\n  _s();\n\n  // esta funcion recorre las categorias totales, la filtra para que queden una de cada una.\n  // luego las setea al state para pasarlo al componente ItemList\n  function loop(param) {\n    const exist = [];\n    const list = param.map(param => param.data().category);\n\n    for (let i = 0; i <= list.length; i++) {\n      exist.push(list[i]);\n    }\n\n    let singleCategory = exist.filter((c, index) => {\n      return exist.indexOf(c) === index;\n    });\n    return singleCategory.filter(x => x !== undefined);\n  }\n\n  const [data, setData] = useState([]); //    usamos use efect para asignarle la data a nuestro estado y asi poder mapear\n\n  useEffect(() => {\n    const db = getFirestore();\n    const itemColletction = db.collection('items');\n    itemColletction.get().then(querySnapshot => {\n      if (querySnapshot.size === 0) {\n        console.log('sin items');\n      } // setData(querySnapshot.docs.map(doc => doc.data()));\n\n\n      setData(loop(querySnapshot.docs)); // console.log(loop(querySnapshot.docs))\n    }).catch(error => {\n      console.log('Error al buscar item...', error);\n    }); // setData(database)\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CategoryList, {\n      param: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(CategoryListContainer, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = CategoryListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryListContainer\");","map":{"version":3,"sources":["C:/Users/FACU PAPA/Desktop/my-app-master/src/components/CategoryListContainer/CategoryListContainer.jsx"],"names":["React","useEffect","useState","CategoryList","getFirestore","CategoryListContainer","loop","param","exist","list","map","data","category","i","length","push","singleCategory","filter","c","index","indexOf","x","undefined","setData","db","itemColletction","collection","get","then","querySnapshot","size","console","log","docs","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,6BAAP;AAEA,OAAOC,YAAP,MAAyB,8BAAzB,C,CACA;AACA;;AACA,SAASC,YAAT,QAA6B,yBAA7B;;;AAEA,eAAe,SAASC,qBAAT,GAAiC;AAAA;;AAE5C;AACA;AACA,WAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,GAAN,CAAUH,KAAK,IAAIA,KAAK,CAACI,IAAN,GAAaC,QAAhC,CAAb;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,IAAI,CAACK,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCL,MAAAA,KAAK,CAACO,IAAN,CAAWN,IAAI,CAACI,CAAD,CAAf;AACH;;AACD,QAAIG,cAAc,GAAGR,KAAK,CAACS,MAAN,CAAa,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC5C,aAAOX,KAAK,CAACY,OAAN,CAAcF,CAAd,MAAqBC,KAA5B;AACH,KAFoB,CAArB;AAGA,WAAOH,cAAc,CAACC,MAAf,CAAuBI,CAAD,IAAOA,CAAC,KAAKC,SAAnC,CAAP;AAEH;;AAKD,QAAM,CAACX,IAAD,EAAOY,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC,CArB4C,CAwB5C;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuB,EAAE,GAAGpB,YAAY,EAAvB;AACA,UAAMqB,eAAe,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAxB;AAEAD,IAAAA,eAAe,CAACE,GAAhB,GAAsBC,IAAtB,CAA4BC,aAAD,IAAmB;AAC1C,UAAIA,aAAa,CAACC,IAAd,KAAuB,CAA3B,EAA8B;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,OAHyC,CAI1C;;;AACAT,MAAAA,OAAO,CAACjB,IAAI,CAACuB,aAAa,CAACI,IAAf,CAAL,CAAP,CAL0C,CAM1C;AACH,KAPD,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCG,KAAvC;AACH,KATD,EAJY,CAgBZ;AAEH,GAlBQ,EAkBN,EAlBM,CAAT;AAqBA,sBACI;AAAA,2BACI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAExB;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH;;GAnDuBN,qB;;KAAAA,qB","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './CategoryListContainer.css';\r\n\r\nimport CategoryList from '../CategoryList/CategoryList'\r\n// base de datos\r\n// import database from '../../DATA/data.json'\r\nimport { getFirestore } from '../../FIREBASE/Firebase'\r\n\r\nexport default function CategoryListContainer() {\r\n\r\n    // esta funcion recorre las categorias totales, la filtra para que queden una de cada una.\r\n    // luego las setea al state para pasarlo al componente ItemList\r\n    function loop(param) {\r\n        const exist = []\r\n        const list = param.map(param => param.data().category)\r\n\r\n        for (let i = 0; i <= list.length; i++) {\r\n            exist.push(list[i])\r\n        }\r\n        let singleCategory = exist.filter((c, index) => {\r\n            return exist.indexOf(c) === index;\r\n        });\r\n        return singleCategory.filter((x) => x !== undefined)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const [data, setData] = useState([])\r\n\r\n\r\n    //    usamos use efect para asignarle la data a nuestro estado y asi poder mapear\r\n    useEffect(() => {\r\n        const db = getFirestore();\r\n        const itemColletction = db.collection('items');\r\n\r\n        itemColletction.get().then((querySnapshot) => {\r\n            if (querySnapshot.size === 0) {\r\n                console.log('sin items');\r\n            }\r\n            // setData(querySnapshot.docs.map(doc => doc.data()));\r\n            setData(loop(querySnapshot.docs));\r\n            // console.log(loop(querySnapshot.docs))\r\n        }).catch((error) => {\r\n            console.log('Error al buscar item...', error);\r\n        })\r\n\r\n\r\n        // setData(database)\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <CategoryList param={data} />\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}